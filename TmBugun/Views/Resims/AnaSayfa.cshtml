@model IEnumerable<TmBugun.Models.Resimler>

@{
    Random rnd = new Random();
    Layout = "~/Views/Shared/_Layout.cshtml";
}


    <div class="" style="height:60px;background-color:#38de5a">
        <div class="gizle">
            <a href="~/Resims/AnaSayfa" style="position:relative;top:5px;padding-left:15%;padding-top:15px;font-size:25px;font-weight:bold;color:white;">Resimler</a>
        </div>
        <div class="goster">
            <a href="~/Resims/AnaSayfa" style="position:relative;left:60%;top:6px;padding-top:15px;font-size:25px;font-weight:bold;color:white;">Resimler</a>
        </div>
    </div>
<div class="container" style="margin-top:30px;">
    <div class="row">
        @foreach (var item in Model)
        {
            var base64 = Convert.ToBase64String(item.Resim);
            string imgsrc = String.Format("data:image/jpeg;base64,{0}", base64);
            int sayi = rnd.Next(2, 6);
            if (sayi >= 6)
            {
                int sayi1 = rnd.Next(6, 8);
                <div class="col-12 col-lg-@sayi1 col-md-@sayi1 col-sm-@sayi1" style="padding:2px;">
                    <a href="/Haberlers/HaberDetay/@item.Id" style="color:white;height:800px;">

                        <div class="card card-image view overlay img-fluid" style="background-image:url(@imgsrc);">
                            <div class="mask waves-effect waves-light rgba-white-slight"></div>
                            <!-- Content -->
                            <div class="text-white text-md-left d-flex align-items-start resimUzeriYazi" style="padding:15px;padding-top:20%">
                                <div>
                                    <h3 class="card-title pt-2" style="font-size:16px;">
                                        <strong>@Html.Raw(item.ResimYazi.Substring(0, 100).ToString())</strong>
                                    </h3>
                                    <h6 class="white-text">
                                        @Html.DisplayFor(modelItem => item.ResimBegSayi)
                                        | @Html.DisplayFor(modelItem => item.ResimEklenmeTarih)
                                    </h6>
                                </div>
                            </div>
                        </div>
                    </a>
                </div>
            }
            else if (sayi < 6)
            {
                int sayi2 = rnd.Next(3, 5);
                 <div class="col-12 col-lg-@sayi2 col-md-@sayi2 col-sm-@sayi2" style="padding:2px;height:auto;">
                    <a href="/Haberlers/HaberDetay/@item.Id" style="color:white">

                        <div class="card card-image view overlay img-fluid" style="background-image:url(@imgsrc);">
                            <div class="mask waves-effect waves-light rgba-white-slight"></div>
                            <!-- Content -->
                            <div class="text-white text-md-left d-flex align-items-start resimUzeriYazi" style="padding:15px;padding-top:20%">
                                <div>
                                    <h3 class="card-title pt-2" style="font-size:16px;">
                                        <strong>@Html.Raw(item.ResimYazi.Substring(0, 100).ToString())</strong>
                                    </h3>
                                    <h6 class="white-text">
                                        @Html.DisplayFor(modelItem => item.ResimBegSayi)
                                        | @Html.DisplayFor(modelItem => item.ResimEklenmeTarih)
                                    </h6>
                                </div>
                            </div>
                        </div>
                    </a>
                </div>
            }



        }
    </div>
</div>



@*<main>
            <h1>Infinite Scroll + Pagination Experiment</h1>
            <p>After a poll by <a href="https://twitter.com/smashingmag">@@@smashingmag</a>, <a href="https://twitter.com/TimSeverien/status/693186708494536704">I got the idea to combine pagination and infinite scroll.</a> The former gives the user control, but needs more effort. The latter lacks control, but requires no special interaction.</p>

            <div class="article-list" id="article-list"></div>
            <ul class="article-list__pagination article-list__pagination--inactive" id="article-list-pagination"></ul>
        </main>


    <style>
        $animation-duration: .2s;

    body {
        background-color: #f8f8f8;
        color: #333;
        counter-reset: page;

        -webkit-font-smoothing: antialiased;
        -moz-font-smoothing: grayscale;
    }

    h1, h2, h3, h4, h5, h6 {
        text-transform: uppercase;
    }

    a {
        $color: #28f;
        color: $color;
        text-decoration: none;

        &:hover, &:focus {
            color: darken($color, 15%);
        }
        &:active {
            color: darken($color, 30%);
        }
    }

    main {
        margin: 0 auto;
        max-width: 30em;
        padding: 1em;
    }

    .article-list__page {
        border-top: 1px solid #ddd;
        clear: both;
        counter-increment: page;
        padding-bottom: 3em;
        position: relative;

        &:before {
            background-color: #ddd;
            display: inline-block;
            content: counter(page);
            color: #888;
            padding: .25em .5em;
            position: absolute;
            left: calc(50% - .75em);
            top: -.75em;
            vertical-align: middle;
            z-index: 1;
        }
    }

    .article-list__item {
        background-color: #eee;
        float: left;
        height: 15em;
        max-width: 50%;
        opacity: .75;
        transform: scale(.8);
        transition: opacity $animation-duration, transform $animation-duration;
        width: 15em;

        &:hover {
            opacity: 1;
            transform: scale(1);
        }
    }

    .article-list__item__image {
        display: block;
        height: auto;
        margin: 0;
        opacity: 1;
        transition: opacity $animation-duration;
        width: 100%;
    }

    .article-list__item__image--loading {
        opacity: 0;
    }

    .article-list__pagination {
        background-color: #222;
        box-shadow: 0 0 1em rgba(#000, .25);
        display: block;
        bottom: 0;
        left: 0;
        list-style-type: none;
        margin: 0;
        padding: .5em;
        position: fixed;
        right: 0;
        text-align: center;
        transform: translateY(0);
        transition: transform $animation-duration;
        z-index: 2;
    }

    .article-list__pagination--inactive {
        transform: translateY(100%);
    }

    .article-list__pagination__item {
        display: inline-block;
        margin: 0 1em;

        a {
            $color: #888;
            color: $color;
            text-decoration: none;

            &:hover, &:focus {
                color: lighten($color, 15%);
            }
            &:active {
                color: lighten($color, 30%);
            }
        }
    }
    </style>

    <script>
        function getPageId(n) {
        return 'article-page-' + n;
    }

    function getDocumentHeight() {
        const body = document.body;
        const html = document.documentElement;

        return Math.max(
            body.scrollHeight, body.offsetHeight,
            html.clientHeight, html.scrollHeight, html.offsetHeight
        );
    };

    function getScrollTop() {
        return (window.pageYOffset !== undefined) ? window.pageYOffset : (document.documentElement || document.body.parentNode || document.body).scrollTop;
    }

    function getArticleImage() {
        const hash = Math.floor(Math.random() * Number.MAX_SAFE_INTEGER);
        const image = new Image;
        image.className = 'article-list__item__image article-list__item__image--loading';
        image.src = 'http://api.adorable.io/avatars/250/' + hash;

        image.onload = function() {
            image.classList.remove('article-list__item__image--loading');
        };

        return image;
    }

    function getArticle() {
        const articleImage = getArticleImage();
        const article = document.createElement('article');
        article.className = 'article-list__item';
        article.appendChild(articleImage);

        return article;
    }

    function getArticlePage(page, articlesPerPage = 16) {
        const pageElement = document.createElement('div');
        pageElement.id = getPageId(page);
        pageElement.className = 'article-list__page';

        while (articlesPerPage--) {
            pageElement.appendChild(getArticle());
        }

        return pageElement;
    }

    function addPaginationPage(page) {
        const pageLink = document.createElement('a');
        pageLink.href = '#' + getPageId(page);
        pageLink.innerHTML = page;

        const listItem = document.createElement('li');
        listItem.className = 'article-list__pagination__item';
        listItem.appendChild(pageLink);

        articleListPagination.appendChild(listItem);

        if (page === 2) {
            articleListPagination.classList.remove('article-list__pagination--inactive');
        }
    }

    function fetchPage(page) {
        articleList.appendChild(getArticlePage(page));
    }

    function addPage(page) {
        fetchPage(page);
        addPaginationPage(page);
    }

    const articleList = document.getElementById('article-list');
    const articleListPagination = document.getElementById('article-list-pagination');
    let page = 0;

    addPage(++page);

    window.onscroll = function() {
        if (getScrollTop() < getDocumentHeight() - window.innerHeight) return;
        addPage(++page);
    };

    </script>*@